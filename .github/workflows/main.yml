name: Project Docs

on: [push]

permissions:
  contents: write

jobs:
  generate-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for git diff to work properly

      - name: Install system dependencies
        run: |
          echo "--- Installing required tools ---"
          sudo apt-get update -qq
          sudo apt-get install -y jq tree
          echo "‚úì Installed jq and tree"

      - name: Generate and Archive Docs
        run: |
          echo "=== STARTING DOCUMENTATION GENERATION ==="
          echo "Creating directory structure..."
          mkdir -p docs/generated/archive
          echo "‚úì Created docs/generated/archive"

          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          echo "Archive timestamp: $TIMESTAMP"

          # Generate repository tree
          echo "Generating directory tree..."
          if command -v tree &> /dev/null; then
            echo "Using tree command (excluded: node_modules, .git, .cache)"
            tree -I 'node_modules|.git|.cache' -a --noreport > docs/generated/00_tree.txt || \
              echo "‚ö†Ô∏è Tree command failed, using fallback"
          fi
          
          if [ ! -s docs/generated/00_tree.txt ]; then
            echo "Using find command fallback"
            find . -type d ! -path './node_modules*' ! -path './.git*' ! -path './.cache*' \
              | sed -e "s/[^-][^\/]*\//  |/g" -e "s/|\([^ ]\)/|-\1/" > docs/generated/00_tree.txt
          fi
          echo "‚úì Saved tree structure (00_tree.txt)"

          # Generate flat file list
          echo "Generating flat file list..."
          find "$(pwd)" -type f ! -path "*/node_modules/*" ! -path "*/.git/*" ! -path "*/.cache/*" \
            | sed 's|/home/runner/workspace/||' > docs/generated/01_flat_dir.txt
          echo "‚úì Saved file list (01_flat_dir.txt)"

          # Handle dependencies
          echo "Checking project dependencies..."
          if [ -f package.json ]; then
            echo "Found package.json"
            jq -r '.dependencies' package.json > docs/generated/dependencies.txt 2>/dev/null || \
              echo "‚ö†Ô∏è jq failed, using grep fallback" && \
              grep '"dependencies"' package.json | awk -F: '{print $2}' > docs/generated/dependencies.txt
          else
            echo "No package.json found" > docs/generated/dependencies.txt
          fi

          [[ -f package-lock.json ]] && echo "package-lock.json exists" >> docs/generated/dependencies.txt
          [[ -f yarn.lock ]] && echo "yarn.lock exists" >> docs/generated/dependencies.txt
          echo "‚úì Saved dependency info"

          # Archive files
          echo "Archiving generated files..."
          cp docs/generated/00_tree.txt docs/generated/archive/00_tree_${TIMESTAMP}.txt
          cp docs/generated/01_flat_dir.txt docs/generated/archive/01_flat_dir_${TIMESTAMP}.txt
          cp docs/generated/dependencies.txt docs/generated/archive/dependencies_${TIMESTAMP}.txt
          echo "‚úì Archived files with timestamp $TIMESTAMP"

          echo "=== DOCUMENTATION GENERATION COMPLETE ==="

      - name: Commit generated docs if changed
        run: |
          echo "=== CHECKING FOR CHANGES ==="
          git add docs/generated/*
          
          if git diff --quiet --cached --exit-code; then
            echo "‚úÖ No changes detected - skipping commit"
          else
            echo "üìù Changes detected - creating commit"
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git commit -m "chore: auto-update docs [skip ci]"
            echo "‚úì Commit created"
          fi

      - name: Push changes
        if: always()
        run: |
          echo "=== PUSHING CHANGES ==="
          if git push origin; then
            echo "üöÄ Successfully pushed changes"
          else
            echo "‚ö†Ô∏è Push failed (might be no changes or network issue)"
          fi
          echo "=== WORKFLOW COMPLETE ==="
